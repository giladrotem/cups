{
    "swagger": "2.0",
    "info": {
        "title": "On Demand Service Marketplace",
        "description": "On Demand Service Marketplace",
        "contact": {
            "name": "Agriya Infoway",
            "url": "http://www.agriya.com",
            "email": "info@agriya.com"
        },
        "license": {
            "name": "Agriya Infoway Licence",
            "url": "http://www.agriya.com/"
        },
        "version": "v1.0b1"
    },
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/register": {
            "post": {
                "summary": "User register",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "summary": "User login",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User loggedin successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/social_login": {
            "post": {
                "summary": "User social login",
                "description": "User social login",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSociallogin"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "User social login for Twitter",
                "description": "User social login for Twitter",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/forgot_password": {
            "post": {
                "summary": "Forgot password",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The forgot password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forgotPasswordUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User Forgot password updated successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/change_password": {
            "put": {
                "summary": "Change password",
                "description": "Change password",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to change password",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The change password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/changePasswordUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Password changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/change_password": {
            "post": {
                "summary": "Change password",
                "description": "Change password",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The change password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminchangePasswordToUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Password changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "Logout user",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/activate/{hash}": {
            "get": {
                "parameters": [
                    {
                        "description": "The User Identifier",
                        "format": "int64",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The User Identifier",
                        "format": "int64",
                        "in": "path",
                        "name": "hash",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found; Not found"
                    }
                },
                "summary": "activate account",
                "tags": [
                    "User"
                ]
            }
        },
        "/users": {
            "get": {
                "summary": "Fetch all users",
                "description": "Returns all users from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort_by_type",
                        "in": "query",
                        "description": "sort_by_type = distance",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "latitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_sw_latitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_sw_longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_ne_latitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_ne_longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appointment_from_date",
                        "in": "query",
                        "description": "Appointment From Date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appointment_to_date",
                        "in": "query",
                        "description": "Appointment To Date",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type for favorite",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "radius to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched users",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Fetch user",
                "description": "Returns a user based on a single ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type must be 'view'",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user by its id",
                "description": "Update user by its id",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post.'lock_type' values (1. GPS / 2. Network / 3. Bluetooth / 4. Custom)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "description": "Deletes a single user based on the ID supplied",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listing_statuses": {
            "get": {
                "summary": "Fetch all listing_statuses",
                "description": "Returns all listing_statuses from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "ListingStatus"
                ],
                "responses": {
                    "200": {
                        "description": "New listing_statuses added",
                        "schema": {
                            "$ref": "#/definitions/ListingStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/users": {
            "get": {
                "summary": "Fetch  users",
                "description": "Returns users from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched users",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_profiles": {
            "put": {
                "summary": "user profile",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "user profile edit skill_level_id = 0 - No Skill / 1 - Basic / 2 - Expert ; listing_address_verified_status_id = 1 - Not Submitted / 2. Pending Verification / 3. Accepted 4. Rejected",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProfileEdit"
                        }
                    }
                ],
                "tags": [
                    "user_profiles"
                ],
                "responses": {
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch user",
                "description": "Returns a user",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "user_profiles"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "summary": "Fetch all providers",
                "description": "Returns all providers from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched providers",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers/{providerId}": {
            "get": {
                "summary": "Fetch provider",
                "description": "Returns a provider based on a single ID",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched provider",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update provider by its id",
                "description": "Update provider by its id",
                "parameters": [
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The provider JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addProvider"
                        }
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Provider updated",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "summary": "Fetch all roles",
                "description": "Returns all roles from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched roles",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles/{roleId}": {
            "get": {
                "summary": "Fetch role",
                "description": "Returns a role based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "ID of role to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched role",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "summary": "Fetch all pages",
                "description": "Returns all pages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pages",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new page",
                "description": "Creates a new page",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMultiplePage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "New page added",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages/{pageId}": {
            "get": {
                "summary": "Fetch page",
                "description": "Returns a page based on a single ID",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched page",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update page by its id",
                "description": "Update page by its id",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page updated",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete page",
                "description": "Deletes a single page based on the ID supplied",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages/{pageId}/{pageSlug}": {
            "get": {
                "summary": "Fetch page",
                "description": "Returns a page based on a single ID",
                "parameters": [
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "pageSlug",
                        "in": "path",
                        "description": "Slug of page to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "lang_code",
                        "in": "query",
                        "description": "lang_code of page to fetch",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched page",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories": {
            "get": {
                "summary": "Fetch all setting categories",
                "description": "Returns all setting categories from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting categories",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories/{settingCategoryId}": {
            "get": {
                "summary": "Fetch setting category",
                "description": "Returns a setting category based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingCategoryId",
                        "in": "path",
                        "description": "ID of setting category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting category",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings/site_languages": {
            "get": {
                "summary": "Fetch all site_languages",
                "description": "Returns all site_languages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched site_languages",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Fetch all settings",
                "description": "Returns all settings from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched settings",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings/{settingId}": {
            "get": {
                "summary": "Fetch setting",
                "description": "Returns a setting based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update setting by its id",
                "description": "Update setting by its id",
                "parameters": [
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The setting JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSetting"
                        }
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Setting updated",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates": {
            "get": {
                "summary": "Fetch all email templates",
                "description": "Returns all email templates from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email templates",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates/{emailTemplateId}": {
            "get": {
                "summary": "Fetch email template",
                "description": "Returns a email template based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email template",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update email template by its id",
                "description": "Update email template by its id",
                "parameters": [
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The email template JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEmailTemplate"
                        }
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Email Template updated",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "summary": "Fetch all cities",
                "description": "Returns all cities from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cities",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new city",
                "description": "Creates a new city",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "New city added",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities/{cityId}": {
            "get": {
                "summary": "Fetch city",
                "description": "Returns a city based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched city",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update city by its id",
                "description": "Update city by its id",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City updated",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete city",
                "description": "Deletes a single city based on the ID supplied",
                "parameters": [
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_statuses": {
            "get": {
                "summary": "Fetch all appointment_statuses",
                "description": "Returns all appointment_statuses from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AppointmentStatus"
                ],
                "responses": {
                    "200": {
                        "description": "New appointment_statuses added",
                        "schema": {
                            "$ref": "#/definitions/AppointmentStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_statuses/{appointmentStatusId}": {
            "get": {
                "summary": "Fetch appointment status",
                "description": "Returns a appointment status based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appointmentStatusId",
                        "in": "path",
                        "description": "ID of appointment status to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AppointmentStatus"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointment status",
                        "schema": {
                            "$ref": "#/definitions/AppointmentStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_settings": {
            "get": {
                "summary": "Fetch all appointment settings",
                "description": "Returns all appointment settings from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter appointment setting",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AppointmentSetting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointment settings",
                        "schema": {
                            "$ref": "#/definitions/AppointmentSetting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_settings/{appointmentSettingId}": {
            "get": {
                "summary": "Fetch appointment setting",
                "description": "Returns a appointment setting based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter appointment setting",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appointmentSettingId",
                        "in": "path",
                        "description": "ID of appointment setting to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AppointmentSetting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointment setting",
                        "schema": {
                            "$ref": "#/definitions/AppointmentSetting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Fetch appointment setting",
                "description": "Returns a appointment setting based on a single ID",
                "parameters": [
                    {
                        "name": "appointmentSettingId",
                        "in": "path",
                        "description": "ID of appointment setting to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointment JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAppointmentSetting"
                        }
                    }
                ],
                "tags": [
                    "AppointmentSetting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointment setting",
                        "schema": {
                            "$ref": "#/definitions/AppointmentSetting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointments": {
            "get": {
                "summary": "Fetch all appointments",
                "description": "Returns all appointments from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "based on type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "based on month",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointments",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new appointment",
                "description": "Creates a new appointment",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointment JSON you want to post / number_of_item => Like number of children or dogs",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAppointment"
                        }
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "New appointment added",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointments/{appointmentId}": {
            "get": {
                "summary": "Fetch appointment",
                "description": "Returns a appointment based on a single ID",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of appointment to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointment",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update appointment by its id",
                "description": "Update appointment by its id",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of appointment to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointment JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateAppointment"
                        }
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Appointment updated",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete appointment",
                "description": "Deletes a single appointment based on the ID supplied",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of appointment to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Appointment deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointments/{appointmentId}/change_status": {
            "put": {
                "summary": "Update appointment by its id",
                "description": "Update appointment by its id",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of appointment to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointment JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAppointmentChangeStatus"
                        }
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Appointment updated",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointments/{appointmentId}/change_service_provider": {
            "put": {
                "summary": "Update appointment by its id",
                "description": "Update appointment by its id",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "in": "path",
                        "description": "ID of appointment to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointment JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAppointmentChangeServiceProvider"
                        }
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Appointment updated",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/appointments": {
            "get": {
                "summary": "Fetch all user appointments",
                "description": "Returns all user appointments from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "based on type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "based on month",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointments",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/service_provider/{serviceProviderId}/appointments/calendar": {
            "get": {
                "summary": "Fetch service provider appointments calendar",
                "description": "Fetch service provider appointments calendar",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "based on type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "based on month",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "serviceProviderId",
                        "in": "path",
                        "description": "ID of service provider",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "available",
                        "in": "query",
                        "description": "based on available status",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "based on year",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Fetch service provider appointments calendar",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/contacts": {
            "get": {
                "summary": "Fetch all Appointment user",
                "description": "Returns all Appointment user",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Appointment"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user appointments",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_modifications": {
            "post": {
                "summary": "Creates a new appointments_modifications",
                "description": "Creates a new appointments_modifications",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointments_modifications JSON you want to post and day: AllDay, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentModificationAdd"
                        }
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "New appointments_modifications added",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all appointments_modifications",
                "description": "Returns all appointments_modifications from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "New appointments_modifications added",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_modifications/{appointmentModificationId}": {
            "get": {
                "summary": "Fetch appointments_modifications",
                "description": "Returns a appointments_modifications based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "appointmentModificationId",
                        "in": "path",
                        "description": "ID of appointments_modifications to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched appointments_modifications",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update appointments_modifications by its id",
                "description": "Update appointments_modifications by its id",
                "parameters": [
                    {
                        "name": "appointmentModificationId",
                        "in": "path",
                        "description": "ID of appointments_modifications to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointments_modifications JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentModificationEdit"
                        }
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "appointments_modifications updated",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete appointments_modifications",
                "description": "Deletes a single appointments_modifications based on the ID supplied",
                "parameters": [
                    {
                        "name": "appointmentModificationId",
                        "in": "path",
                        "description": "ID of appointments_modifications to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "appointments_modifications deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/appointment_modifications": {
            "get": {
                "summary": "Fetch own appointments_modifications",
                "description": "Returns own appointments_modifications from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "New appointments_modifications added",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/appointment_modifications/multiple": {
            "post": {
                "summary": "Creates a new appointments_modifications",
                "description": "Creates a new appointments_modifications",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointments_modifications JSON you want to post and day: AllDay, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentModificationAddMultiple"
                        }
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "New appointments_modifications added",
                        "schema": {
                            "$ref": "#/definitions/AppointmentModifications"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a new appointments_modifications",
                "description": "Delete a new appointments_modifications",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The appointments_modifications JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AppointmentModificationDeleteMultiple"
                        }
                    }
                ],
                "tags": [
                    "AppointmentModifications"
                ],
                "responses": {
                    "200": {
                        "description": "appointments_modifications deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_favorites": {
            "post": {
                "summary": "Creates a new user_favorites",
                "description": "Creates a new user_favorites",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user_favorites JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FavoriteAdd"
                        }
                    }
                ],
                "tags": [
                    "UserFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "New user_favorites added",
                        "schema": {
                            "$ref": "#/definitions/UserFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch all user_favorites",
                "description": "Returns all user_favorites from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "New user_favorites added",
                        "schema": {
                            "$ref": "#/definitions/UserFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_favorites/{userFavoriteId}": {
            "get": {
                "summary": "Fetch user_favorites",
                "description": "Returns a user_favorites based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userFavoriteId",
                        "in": "path",
                        "description": "ID of user_favorites to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user_favorites",
                        "schema": {
                            "$ref": "#/definitions/UserFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user_favorites",
                "description": "Deletes a single user_favorites based on the ID supplied",
                "parameters": [
                    {
                        "name": "userFavoriteId",
                        "in": "path",
                        "description": "ID of user_favorites to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "user_favorites deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "summary": "Fetch all services",
                "description": "Returns all services from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter service",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched services",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new service",
                "description": "Creates a new service",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The service JSON you want to post. booking_option_id = (1 => TimeSlot / 2 => SingleDate / 3 => MultipleDate / 4 => Recurring)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addService"
                        }
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "New service added",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/services/{serviceId}": {
            "get": {
                "summary": "Fetch service",
                "description": "Returns a service based on a single ID",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "ID of service to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter service",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched service",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update service by its id",
                "description": "Update service by its id",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "ID of service to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The service JSON you want to post. booking_option_id = (1 => TimeSlot / 2 => SingleDate / 3 => MultipleDate / 4 => Recurring)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateService"
                        }
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "Service updated",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete service",
                "description": "Deletes a single service based on the ID supplied",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "ID of service to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/services_users": {
            "get": {
                "summary": "Fetch service users",
                "description": "Returns service users from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter service user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Service User"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched service users",
                        "schema": {
                            "$ref": "#/definitions/ServiceUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Fetch all categories",
                "description": "Returns all categories from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter service",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched categories",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new category",
                "description": "Creates a new category",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "New category added",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "get": {
                "summary": "Fetch category",
                "description": "Returns a category based on a single ID",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter service",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched category",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update category by its id",
                "description": "Update category by its id",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete category",
                "description": "Deletes a single category based on the ID supplied",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states": {
            "get": {
                "summary": "Fetch all states",
                "description": "Returns all states from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched states",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new state",
                "description": "Creates a new state",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "New state added",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states/{stateId}": {
            "get": {
                "summary": "Fetch state",
                "description": "Returns a state based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched state",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update state by its id",
                "description": "Update state by its id",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State updated",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete state",
                "description": "Deletes a single state based on the ID supplied",
                "parameters": [
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "summary": "Fetch all countries",
                "description": "Returns all countries from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched countries",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new country",
                "description": "Creates a new country",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "New country added",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries/{countryId}": {
            "get": {
                "summary": "Fetch country",
                "description": "Returns a country based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched country",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update country by its id",
                "description": "Update country by its id",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country updated",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete country",
                "description": "Deletes a single country based on the ID supplied",
                "parameters": [
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "summary": "Fetch all languages",
                "description": "Returns all languages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched languages",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new language",
                "description": "Creates a new language",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "New language added",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages/{languageId}": {
            "get": {
                "summary": "Fetch language",
                "description": "Returns a language based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched language",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update language by its id",
                "description": "Update language by its id",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language updated",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete language",
                "description": "Deletes a single language based on the ID supplied",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "summary": "Site stats",
                "description": "Site stats",
                "tags": [
                    "Stats"
                ],
                "responses": {
                    "200": {
                        "description": "Site stats"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments": {
            "post": {
                "summary": "Upload attachment",
                "description": "Upload attachment",
                "parameters": [
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Class name (UserAvatar / ListingPhoto / Contact / Service / Category).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments/{attachmentId}": {
            "delete": {
                "summary": "Delete attachment",
                "description": "Deletes a single attachment based on the ID supplied",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "ID of attachment to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "summary": "Fetch all contacts",
                "description": "Returns all contacts from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contacts",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new contact",
                "description": "Creates a new contact",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The contact JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addContact"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "New contact added",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}": {
            "get": {
                "summary": "Fetch contact",
                "description": "Returns a contact based on a single ID",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contact",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update contact by its id",
                "description": "Update contact by its id",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The contact JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addContact"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact updated",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete contact",
                "description": "Deletes a single contact based on the ID supplied",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/translations": {
            "get": {
                "summary": "Fetch all translations",
                "description": "Returns all translations from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "File translation",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched translations",
                        "schema": {
                            "$ref": "#/definitions/Translation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new Translation",
                "description": "Creates a new Translation",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The transaltion JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addTranslation"
                        }
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "New translation added",
                        "schema": {
                            "$ref": "#/definitions/Translation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/translations/{langCode}": {
            "put": {
                "summary": "Edit Translation",
                "description": "Edit Translation",
                "parameters": [
                    {
                        "name": "langCode",
                        "in": "path",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The transaltion JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editTranslation"
                        }
                    }
                ],
                "tags": [
                    "Translation"
                ],
                "responses": {
                    "200": {
                        "description": "Update Translation",
                        "schema": {
                            "$ref": "#/definitions/updateTranslation"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_logins": {
            "get": {
                "summary": "Fetch all user logins",
                "description": "Returns all user logins from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user logins",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserLogin"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user logins",
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_logins/{userLoginId}": {
            "get": {
                "summary": "Fetch UserLogin",
                "description": "Returns a UserLogin based on a single ID",
                "parameters": [
                    {
                        "name": "userLoginId",
                        "in": "path",
                        "description": "ID of UserLogin to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user logins",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserLogin"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched UserLogin",
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete UserLogin",
                "description": "Deletes a single UserLogin based on the ID supplied",
                "parameters": [
                    {
                        "name": "userLoginId",
                        "in": "path",
                        "description": "ID of UserLogin to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserLogin"
                ],
                "responses": {
                    "200": {
                        "description": "UserLogin deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_views": {
            "get": {
                "summary": "Fetch all user views",
                "description": "Returns all user views from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserView"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user views",
                        "schema": {
                            "$ref": "#/definitions/UserView"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_views/stats": {
            "get": {
                "summary": "Fetch all user views",
                "description": "Returns all user views from the system",
                "tags": [
                    "UserView"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user views",
                        "schema": {
                            "$ref": "#/definitions/UserView"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_views/{userViewId}": {
            "get": {
                "summary": "Fetch user view",
                "description": "Returns a user view based on a single ID",
                "parameters": [
                    {
                        "name": "userViewId",
                        "in": "path",
                        "description": "ID of user view to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserView"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user view",
                        "schema": {
                            "$ref": "#/definitions/UserView"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user view",
                "description": "Deletes a single user view based on the ID supplied",
                "parameters": [
                    {
                        "name": "userViewId",
                        "in": "path",
                        "description": "ID of user view to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserView"
                ],
                "responses": {
                    "200": {
                        "description": "User View deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/list": {
            "get": {
                "summary": "Fetch all payment gateways",
                "description": "Returns all payment gateways from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter payment gateway",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateways",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways": {
            "get": {
                "summary": "Fetch all payment gateways",
                "description": "Returns all payment gateways from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter payment gateway",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateways",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/{paymentGatewayId}": {
            "get": {
                "summary": "Fetch payment gateway",
                "description": "Returns a payment gateway based on a single ID",
                "parameters": [
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateway",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update payment gateway by its id",
                "description": "Update payment gateway by its id",
                "parameters": [
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The payment gateway JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPaymentGateway"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Payment Gateway updated",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateway_settings/{paymentGatewaySettingId}": {
            "put": {
                "summary": "Update payment gateway setting by its id",
                "description": "Update payment gateway setting by its id",
                "parameters": [
                    {
                        "name": "paymentGatewaySettingId",
                        "in": "path",
                        "description": "ID of payment gateway setting to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The payment gateway setting JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPaymentGatewaySetting"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Payment Gateway Setting updated",
                        "schema": {
                            "$ref": "#/definitions/PaymentGatewaySetting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "Fetch all transactions",
                "description": "Returns all transactions from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched transactions",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/transactions": {
            "get": {
                "summary": "Fetch user wise transactions",
                "description": "Returns user wise transactions from the system",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to fetch transaction",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user transactions",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals": {
            "get": {
                "summary": "Fetch all user cash withdrawals",
                "description": "Returns all user cash withdrawals from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_cash_withdrawals": {
            "get": {
                "summary": "Fetch all user cash withdrawals",
                "description": "Returns all user cash withdrawals from the system",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user cash withdrawal",
                "description": "Creates a new user cash withdrawal",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "New user cash withdrawal added",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals/{userCashWithdrawalId}": {
            "get": {
                "summary": "Fetch user cash withdrawal",
                "description": "Returns a user cash withdrawal based on a single ID",
                "parameters": [
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawal",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user cash withdrawal by its id",
                "description": "Update user cash withdrawal by its id",
                "parameters": [
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "User Cash Withdrawal updated",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete UserCashWithdrawal",
                "description": "Deletes a single UserCashWithdrawal based on the ID supplied",
                "parameters": [
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of UserCashWithdrawal to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "The user cash withdrawal deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_cash_withdrawals/{userCashWithdrawalId}": {
            "get": {
                "summary": "Fetch user cash withdrawal",
                "description": "Returns a user cash withdrawal based on a single ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawal",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts": {
            "get": {
                "summary": "Fetch all money transfer accounts",
                "description": "Returns all money transfer accounts from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter money transfer account",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer accounts",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new money transfer account",
                "description": "Creates a new money transfer account",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "New money transfer account added",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Fetch money transfer account",
                "description": "Returns a money transfer account based on a single ID",
                "parameters": [
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer account",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update money transfer account by its id",
                "description": "Update money transfer account by its id",
                "parameters": [
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account updated",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete money transfer account",
                "description": "Deletes a single money transfer account based on the ID supplied",
                "parameters": [
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/money_transfer_accounts": {
            "get": {
                "summary": "Fetch all money transfer accounts",
                "description": "Returns all money transfer accounts from the system",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter money transfer account",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer accounts",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new money transfer account",
                "description": "Creates a new money transfer account",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "New money transfer account added",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Fetch money transfer account",
                "description": "Returns a money transfer account based on a single ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer account",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update money transfer account by its id",
                "description": "Update money transfer account by its id",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account updated",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete money transfer account",
                "description": "Deletes a single money transfer account based on the ID supplied",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "summary": "Fetch all messages",
                "description": "Returns all messages from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched messages",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new message",
                "description": "Creates a new message",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The message JSON you want to post class value will be ( Contest / ContestUser / Project / Bid / QuoteBid )",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMessage"
                        }
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "New message added",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/messages/{messageId}": {
            "get": {
                "summary": "Fetch message",
                "description": "Returns a message based on a single ID",
                "parameters": [
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "ID of message to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched message",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/form_field_submissions": {
            "get": {
                "summary": "Fetch all  form field submission",
                "description": "Returns all  form field submission from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field submission",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Class name (Service)",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "foreign_id",
                        "in": "query",
                        "description": "Id of foreign to fetch.",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "FormFieldSubmission"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  form fields",
                        "schema": {
                            "$ref": "#/definitions/FormFieldSubmission"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/form_fields": {
            "get": {
                "summary": "Fetch all  form fields",
                "description": "Returns all  form fields from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "FormField"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  form fields",
                        "schema": {
                            "$ref": "#/definitions/FormField"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new  form field",
                "description": "Creates a new  form field",
                "parameters": [
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Class name (Service).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The  form field JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFormField"
                        }
                    }
                ],
                "tags": [
                    "FormField"
                ],
                "responses": {
                    "200": {
                        "description": "New quote form field added",
                        "schema": {
                            "$ref": "#/definitions/FormField"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/form_fields/{FormFieldId}": {
            "get": {
                "summary": "Fetch  form field",
                "description": "Returns a  form field based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "FormFieldId",
                        "in": "path",
                        "description": "ID of  form field to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "FormField"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  form field",
                        "schema": {
                            "$ref": "#/definitions/FormField"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update form field by its id",
                "description": "Update form field by its id",
                "parameters": [
                    {
                        "name": "FormFieldId",
                        "in": "path",
                        "description": "ID of quote form field to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quote form field JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFormField"
                        }
                    }
                ],
                "tags": [
                    "FormField"
                ],
                "responses": {
                    "200": {
                        "description": "Form Field updated",
                        "schema": {
                            "$ref": "#/definitions/FormField"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete form field",
                "description": "Deletes a single form field based on the ID supplied",
                "parameters": [
                    {
                        "name": "FormFieldId",
                        "in": "path",
                        "description": "ID of  form field to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "FormField"
                ],
                "responses": {
                    "200": {
                        "description": "Form Field deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/form_field_groups": {
            "get": {
                "summary": "Fetch all  form fields",
                "description": "Returns all  form fields from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "FormFieldGroup"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  form fields",
                        "schema": {
                            "$ref": "#/definitions/FormFieldGroup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new form field group",
                "description": "Creates a new form field group",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The form field group JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFormFieldGroup"
                        }
                    }
                ],
                "tags": [
                    "FormFieldGroup"
                ],
                "responses": {
                    "200": {
                        "description": "New form field group added",
                        "schema": {
                            "$ref": "#/definitions/FormFieldGroup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/form_field_groups/{formFieldGroupId}": {
            "get": {
                "summary": "Fetch  form field",
                "description": "Returns a  form field based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "formFieldGroupId",
                        "in": "path",
                        "description": "ID of form field group to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "FormFieldGroup"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched  form field",
                        "schema": {
                            "$ref": "#/definitions/FormFieldGroup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update form field group by its id",
                "description": "Update form field group by its id",
                "parameters": [
                    {
                        "name": "formFieldGroupId",
                        "in": "path",
                        "description": "ID of form field group to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The form field group JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFormFieldGroup"
                        }
                    }
                ],
                "tags": [
                    "FormFieldGroup"
                ],
                "responses": {
                    "200": {
                        "description": "Form Field Group updated",
                        "schema": {
                            "$ref": "#/definitions/FormFieldGroup"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/input_types": {
            "get": {
                "summary": "Fetch all input types",
                "description": "Returns all input types from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "InputType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched input types",
                        "schema": {
                            "$ref": "#/definitions/InputType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/genders": {
            "get": {
                "summary": "Fetch all genders",
                "description": "Returns all genders from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter form field",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Gender"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched genders",
                        "schema": {
                            "$ref": "#/definitions/Gender"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/genders/{genderId}": {
            "get": {
                "summary": "Fetch gender",
                "description": "Returns a gender based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "genderId",
                        "in": "path",
                        "description": "ID of gender to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Gender"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched gender",
                        "schema": {
                            "$ref": "#/definitions/Gender"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/withdrawal_statuses": {
            "get": {
                "summary": "Fetch all withdrawal statuses",
                "description": "Returns all withdrawal statuses from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "WithdrawalStatus"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched withdrawal statuses",
                        "schema": {
                            "$ref": "#/definitions/WithdrawalStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/withdrawal_statuses/{withdrawalStatusId}": {
            "get": {
                "summary": "Fetch withdrawal status",
                "description": "Returns a withdrawal status based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "withdrawalStatusId",
                        "in": "path",
                        "description": "ID of withdrawal status to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "WithdrawalStatus"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched withdrawal status",
                        "schema": {
                            "$ref": "#/definitions/WithdrawalStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "summary": "Creates a new payment",
                "description": "Creates a new payment",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The payment JSON you want to post . Class name (Appointment/ProUser/TopUser).",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPayment"
                        }
                    }
                ],
                "tags": [
                    "Payment"
                ],
                "responses": {
                    "200": {
                        "description": "New payment added",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_credit_cards": {
            "get": {
                "summary": "Fetch all user_credit_cards",
                "description": "Returns all user_credit_cards from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched UserCreditCard",
                        "schema": {
                            "$ref": "#/definitions/UserCreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user_credit_cards",
                "description": "Creates a new user_credit_cards",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UserCreditCard JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addVault"
                        }
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "New vault added",
                        "schema": {
                            "$ref": "#/definitions/UserCreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_credit_cards/{userCreditCardId}": {
            "get": {
                "summary": "Fetch all user_credit_cards",
                "description": "Returns all user_credit_cards from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userCreditCardId",
                        "in": "path",
                        "description": "ID of UserCreditCard to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched UserCreditCard",
                        "schema": {
                            "$ref": "#/definitions/UserCreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update UserCreditCard by its id",
                "description": "Update UserCreditCard by its id",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userCreditCardId",
                        "in": "path",
                        "description": "ID of UserCreditCard to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The UserCreditCard JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateVault"
                        }
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "UserCreditCard updated",
                        "schema": {
                            "$ref": "#/definitions/UserCreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete UserCreditCard",
                "description": "Deletes a single UserCreditCard based on the ID supplied",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userCreditCardId",
                        "in": "path",
                        "description": "ID of UserCreditCard to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "UserCreditCard deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/user_credit_cards": {
            "get": {
                "summary": "Fetch all user_credit_cards",
                "description": "Returns all user_credit_cards from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCreditCard"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched UserCreditCard",
                        "schema": {
                            "$ref": "#/definitions/UserCreditCard"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "summary": "Fetch all reviews",
                "description": "Returns all reviews from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Review"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched reviews",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new review",
                "description": "Creates a new review",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The review JSON you want to post class value will be (Appointment)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addReview"
                        }
                    }
                ],
                "tags": [
                    "Review"
                ],
                "responses": {
                    "200": {
                        "description": "New review added",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/reviews/{reviewId}": {
            "get": {
                "summary": "Fetch review",
                "description": "Returns a review based on a single ID",
                "parameters": [
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "ID of review to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Review"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched review",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update review by its id",
                "description": "Update review by its id",
                "parameters": [
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "ID of review to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The review JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuoteBidReview"
                        }
                    }
                ],
                "tags": [
                    "Review"
                ],
                "responses": {
                    "200": {
                        "description": "Review updated",
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete review",
                "description": "Deletes a single review based on the ID supplied",
                "parameters": [
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "ID of review to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Review"
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cancellation_policies": {
            "get": {
                "summary": "Fetch all cancellation policies",
                "description": "Returns all cancellation policies from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "CancellationPolicy"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cancellation policies",
                        "schema": {
                            "$ref": "#/definitions/CancellationPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new cancellation policy",
                "description": "Creates a new cancellation policy",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cancellation policy JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCancellationPolicy"
                        }
                    }
                ],
                "tags": [
                    "CancellationPolicy"
                ],
                "responses": {
                    "200": {
                        "description": "New cancellation policy added",
                        "schema": {
                            "$ref": "#/definitions/CancellationPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cancellation_policies/{cancellationPolicyId}": {
            "get": {
                "summary": "Fetch cancellation policy",
                "description": "Returns a cancellation policy based on a single ID",
                "parameters": [
                    {
                        "name": "cancellationPolicyId",
                        "in": "path",
                        "description": "ID of cancellation policy to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "CancellationPolicy"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cancellation policy",
                        "schema": {
                            "$ref": "#/definitions/CancellationPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update cancellation policy by its id",
                "description": "Update cancellation policy by its id",
                "parameters": [
                    {
                        "name": "cancellationPolicyId",
                        "in": "path",
                        "description": "ID of cancellation policy to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The cancellation policy JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCancellationPolicy"
                        }
                    }
                ],
                "tags": [
                    "CancellationPolicy"
                ],
                "responses": {
                    "200": {
                        "description": "Cancellation Policy updated",
                        "schema": {
                            "$ref": "#/definitions/CancellationPolicy"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete cancellation policy",
                "description": "Deletes a single cancellation policy based on the ID supplied",
                "parameters": [
                    {
                        "name": "cancellationPolicyId",
                        "in": "path",
                        "description": "ID of cancellation policy to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "CancellationPolicy"
                ],
                "responses": {
                    "200": {
                        "description": "Cancellation Policy deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/account_close_reasons": {
            "get": {
                "summary": "Fetch all account close reasons",
                "description": "Returns all account close reasons from the system",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AccountCloseReason"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched account close reasons",
                        "schema": {
                            "$ref": "#/definitions/AccountCloseReason"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new account close reason",
                "description": "Creates a new account close reason",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The account close reason JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAccountCloseReason"
                        }
                    }
                ],
                "tags": [
                    "AccountCloseReason"
                ],
                "responses": {
                    "200": {
                        "description": "New account close reason added",
                        "schema": {
                            "$ref": "#/definitions/AccountCloseReason"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/account_close_reasons/{accountCloseReasonId}": {
            "get": {
                "summary": "Fetch account close reason",
                "description": "Returns a account close reason based on a single ID",
                "parameters": [
                    {
                        "name": "accountCloseReasonId",
                        "in": "path",
                        "description": "ID of account close reason to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AccountCloseReason"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched account close reason",
                        "schema": {
                            "$ref": "#/definitions/AccountCloseReason"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update account close reason by its id",
                "description": "Update account close reason by its id",
                "parameters": [
                    {
                        "name": "accountCloseReasonId",
                        "in": "path",
                        "description": "ID of account close reason to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The account close reason JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAccountCloseReason"
                        }
                    }
                ],
                "tags": [
                    "AccountCloseReason"
                ],
                "responses": {
                    "200": {
                        "description": "Account Close Reason updated",
                        "schema": {
                            "$ref": "#/definitions/AccountCloseReason"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete account close reason",
                "description": "Deletes a single account close reason based on the ID supplied",
                "parameters": [
                    {
                        "name": "accountCloseReasonId",
                        "in": "path",
                        "description": "ID of account close reason to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AccountCloseReason"
                ],
                "responses": {
                    "200": {
                        "description": "Account Close Reason deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/faqs": {
            "get": {
                "summary": "Fetch all faqs",
                "description": "Returns all faqs from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Faq"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched faqs",
                        "schema": {
                            "$ref": "#/definitions/Faq"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new faq",
                "description": "Creates a new faq",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The faq JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFaq"
                        }
                    }
                ],
                "tags": [
                    "Faq"
                ],
                "responses": {
                    "200": {
                        "description": "New faq added",
                        "schema": {
                            "$ref": "#/definitions/Faq"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/faqs/{faqId}": {
            "get": {
                "summary": "Fetch faq",
                "description": "Returns a faq based on a single ID",
                "parameters": [
                    {
                        "name": "faqId",
                        "in": "path",
                        "description": "ID of faq to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Faq"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched faq",
                        "schema": {
                            "$ref": "#/definitions/Faq"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update faq by its id",
                "description": "Update faq by its id",
                "parameters": [
                    {
                        "name": "faqId",
                        "in": "path",
                        "description": "ID of faq to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The faq JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addFaq"
                        }
                    }
                ],
                "tags": [
                    "Faq"
                ],
                "responses": {
                    "200": {
                        "description": "Faq updated",
                        "schema": {
                            "$ref": "#/definitions/Faq"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete faq",
                "description": "Deletes a single faq based on the ID supplied",
                "parameters": [
                    {
                        "name": "faqId",
                        "in": "path",
                        "description": "ID of faq to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Faq"
                ],
                "responses": {
                    "200": {
                        "description": "Faq deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quizzes": {
            "get": {
                "summary": "Fetch all quizzes",
                "description": "Returns all quizzes from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Quiz"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quizzes",
                        "schema": {
                            "$ref": "#/definitions/Quiz"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new quiz",
                "description": "Creates a new quiz",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuiz"
                        }
                    }
                ],
                "tags": [
                    "Quiz"
                ],
                "responses": {
                    "200": {
                        "description": "New quiz added",
                        "schema": {
                            "$ref": "#/definitions/Quiz"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quizzes/{quizId}": {
            "get": {
                "summary": "Fetch quiz",
                "description": "Returns a quiz based on a single ID",
                "parameters": [
                    {
                        "name": "quizId",
                        "in": "path",
                        "description": "ID of quiz to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Quiz"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quiz",
                        "schema": {
                            "$ref": "#/definitions/Quiz"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update quiz by its id",
                "description": "Update quiz by its id",
                "parameters": [
                    {
                        "name": "quizId",
                        "in": "path",
                        "description": "ID of quiz to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuiz"
                        }
                    }
                ],
                "tags": [
                    "Quiz"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz updated",
                        "schema": {
                            "$ref": "#/definitions/Quiz"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete quiz",
                "description": "Deletes a single quiz based on the ID supplied",
                "parameters": [
                    {
                        "name": "quizId",
                        "in": "path",
                        "description": "ID of quiz to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Quiz"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quiz_questions": {
            "get": {
                "summary": "Fetch all quiz questions",
                "description": "Returns all quiz questions from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "QuizQuestion"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quiz questions",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestion"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new quiz question",
                "description": "Creates a new quiz question",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz question JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuizQuestion"
                        }
                    }
                ],
                "tags": [
                    "QuizQuestion"
                ],
                "responses": {
                    "200": {
                        "description": "New quiz question added",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestion"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quiz_questions/{quizQuestionId}": {
            "get": {
                "summary": "Fetch quiz question",
                "description": "Returns a quiz question based on a single ID",
                "parameters": [
                    {
                        "name": "quizQuestionId",
                        "in": "path",
                        "description": "ID of quiz question to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "QuizQuestion"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quiz question",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestion"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update quiz question by its id",
                "description": "Update quiz question by its id",
                "parameters": [
                    {
                        "name": "quizQuestionId",
                        "in": "path",
                        "description": "ID of quiz question to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz question JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuizQuestion"
                        }
                    }
                ],
                "tags": [
                    "QuizQuestion"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz Question updated",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestion"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete quiz question",
                "description": "Deletes a single quiz question based on the ID supplied",
                "parameters": [
                    {
                        "name": "quizQuestionId",
                        "in": "path",
                        "description": "ID of quiz question to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "QuizQuestion"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz Question deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quiz_question_answer_options": {
            "get": {
                "summary": "Fetch all quiz question answer options",
                "description": "Returns all quiz question answer options from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "QuizQuestionAnswerOption"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quiz question answer options",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestionAnswerOption"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new quiz question answer option",
                "description": "Creates a new quiz question answer option",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz question answer option JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuizQuestionAnswerOption"
                        }
                    }
                ],
                "tags": [
                    "QuizQuestionAnswerOption"
                ],
                "responses": {
                    "200": {
                        "description": "New quiz question answer option added",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestionAnswerOption"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/quiz_question_answer_options/{quizQuestionAnswerOptionId}": {
            "get": {
                "summary": "Fetch quiz question answer option",
                "description": "Returns a quiz question answer option based on a single ID",
                "parameters": [
                    {
                        "name": "quizQuestionAnswerOptionId",
                        "in": "path",
                        "description": "ID of quiz question answer option to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "QuizQuestionAnswerOption"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched quiz question answer option",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestionAnswerOption"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update quiz question answer option by its id",
                "description": "Update quiz question answer option by its id",
                "parameters": [
                    {
                        "name": "quizQuestionAnswerOptionId",
                        "in": "path",
                        "description": "ID of quiz question answer option to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The quiz question answer option JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addQuizQuestionAnswerOption"
                        }
                    }
                ],
                "tags": [
                    "QuizQuestionAnswerOption"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz Question Answer Option updated",
                        "schema": {
                            "$ref": "#/definitions/QuizQuestionAnswerOption"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete quiz question answer option",
                "description": "Deletes a single quiz question answer option based on the ID supplied",
                "parameters": [
                    {
                        "name": "quizQuestionAnswerOptionId",
                        "in": "path",
                        "description": "ID of quiz question answer option to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "QuizQuestionAnswerOption"
                ],
                "responses": {
                    "200": {
                        "description": "Quiz Question Answer Option deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/invite_friends": {
            "post": {
                "summary": "Invite friends",
                "description": "Invite friends",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Invite friends to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InviteFriends"
                        }
                    }
                ],
                "tags": [
                    "InviteFriends"
                ],
                "responses": {
                    "200": {
                        "description": "InviteFriends"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apns_devices": {
            "get": {
                "summary": "Fetch all apns devices",
                "description": "Returns all apns devices from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "ApnsDevice"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched apns devices",
                        "schema": {
                            "$ref": "#/definitions/ApnsDevice"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new apns device",
                "description": "Creates a new apns device",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The apns device JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addApnsDevice"
                        }
                    }
                ],
                "tags": [
                    "ApnsDevice"
                ],
                "responses": {
                    "200": {
                        "description": "New apns device added",
                        "schema": {
                            "$ref": "#/definitions/ApnsDevice"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apns_devices/{apnsDeviceId}": {
            "get": {
                "summary": "Fetch apns device",
                "description": "Returns a apns device based on a single ID",
                "parameters": [
                    {
                        "name": "apnsDeviceId",
                        "in": "path",
                        "description": "ID of apns device to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "ApnsDevice"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched apns device",
                        "schema": {
                            "$ref": "#/definitions/ApnsDevice"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete apns device",
                "description": "Deletes a single apns device based on the ID supplied",
                "parameters": [
                    {
                        "name": "apnsDeviceId",
                        "in": "path",
                        "description": "ID of apns device to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "ApnsDevice"
                ],
                "responses": {
                    "200": {
                        "description": "Apns Device deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/resend_activation_link": {
            "post": {
                "summary": "Resend activation link.",
                "description": "Resend activation link.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Resend activation link.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/resend_otp": {
            "post": {
                "summary": "Resend otp.",
                "description": "Resend otp.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Resend otp.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/verify_otp": {
            "post": {
                "operationId": "resend otp",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/verifyOtp"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found; Not found"
                    }
                },
                "summary": "verify otp",
                "tags": [
                    "User"
                ]
            }
        },
        "/plugins": {
            "get": {
                "summary": "Fetch all plugins",
                "description": "Returns all plugins from the system",
                "tags": [
                    "Plugin"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Plugin",
                        "schema": {
                            "$ref": "#/definitions/Plugin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update plugins by its id",
                "description": "Update plugins by its id",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The Plugin JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updatePlugin"
                        }
                    }
                ],
                "tags": [
                    "Plugin"
                ],
                "responses": {
                    "200": {
                        "description": "Plugin updated",
                        "schema": {
                            "$ref": "#/definitions/Plugin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/top_listing_payment_logs": {
            "get": {
                "summary": "Fetch all top listing payment logs",
                "description": "Returns all top listing payment logs from the system",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter top listing payment log",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "TopListingPaymentLog"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched top listing payment logs",
                        "schema": {
                            "$ref": "#/definitions/TopListingPaymentLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/top_listing_payment_logs/{topListingPaymentLogId}": {
            "get": {
                "summary": "Fetch top listing payment log",
                "description": "Returns a top listing payment log based on a single ID",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter top listing payment log",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "topListingPaymentLogId",
                        "in": "path",
                        "description": "ID of top listing payment log to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "TopListingPaymentLog"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched top listing payment log",
                        "schema": {
                            "$ref": "#/definitions/TopListingPaymentLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete top listing payment log",
                "description": "Deletes a single top listing payment log based on the ID supplied",
                "parameters": [
                    {
                        "name": "topListingPaymentLogId",
                        "in": "path",
                        "description": "ID of top listing payment log to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "TopListingPaymentLog"
                ],
                "responses": {
                    "200": {
                        "description": "Top Listing Payment Log deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "summary": "Fetch all requests",
                "description": "Returns all requests from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter top listing payment log",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "work_location_latitude",
                        "in": "query",
                        "description": "latitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "work_location_longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_sw_latitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_sw_longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_ne_latitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "listing_ne_longitude",
                        "in": "query",
                        "description": "longitude to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "radius to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Request"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched requests",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new request",
                "description": "Creates a new request",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The request JSON you want to post request_status_id => 1. Open / 2. Closed ; job_type_id => 1. One time Job / 2. Part Time / 3. Full Time ; appointment_timing_type_id => 1. Specify times / 2. During the day / 3. During the night ; payment_mode_id  => 1. Through Site / 2. Pay Cash",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRequest"
                        }
                    }
                ],
                "tags": [
                    "Request"
                ],
                "responses": {
                    "200": {
                        "description": "New request added",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requests/{requestId}": {
            "get": {
                "summary": "Fetch request",
                "description": "Returns a request based on a single ID",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of request to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter top listing payment log",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Request"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched request",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update request by its id",
                "description": "Update request by its id",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of request to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The request JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRequest"
                        }
                    }
                ],
                "tags": [
                    "Request"
                ],
                "responses": {
                    "200": {
                        "description": "Request updated",
                        "schema": {
                            "$ref": "#/definitions/Request"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete request",
                "description": "Deletes a single request based on the ID supplied",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of request to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Request"
                ],
                "responses": {
                    "200": {
                        "description": "Request deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists": {
            "get": {
                "summary": "Fetch all lists",
                "description": "Returns all lists from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new lists",
                "description": "Creates a new lists",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The lists JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMailChimpList"
                        }
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "New requests user added",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listId}": {
            "get": {
                "summary": "Fetch lists",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update lists by its id",
                "description": "Update lists by its id",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The lists JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMailChimpList"
                        }
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "lists updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete lists",
                "description": "Deletes a single lists based on the ID supplied",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "lists deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listId}/members": {
            "post": {
                "summary": "Fetch lists",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The lists JSON you want to post status = subscribed/unsubscribed/cleaned/pending",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMember"
                        }
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch lists",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/lists/{listId}/members/{subscriberHash}": {
            "get": {
                "summary": "Fetch lists",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "subscriberHash",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Fetch lists",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "listId",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "subscriberHash",
                        "in": "path",
                        "description": "ID of lists to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpList"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched lists",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "summary": "Fetch all campaigns",
                "description": "Returns all campaigns from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched campaigns",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new campaigns",
                "description": "Creates a new campaigns",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The campaigns JSON you want to post type =regular/plaintext/absplit/rss/variate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMailChimpCampaign"
                        }
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "New campaigns added",
                        "schema": {
                            "$ref": "#/definitions/MailChimpList"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}": {
            "get": {
                "summary": "Fetch lists",
                "description": "Returns a campaigns based on a single ID",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched campaigns",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The campaigns JSON you want to post type =regular/plaintext/absplit/rss/variate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMailChimpCampaign"
                        }
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete campaigns",
                "description": "Deletes a single campaigns based on the ID supplied",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/content": {
            "get": {
                "summary": "Fetch lists",
                "description": "Returns a campaigns based on a single ID",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched campaigns",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The campaigns JSON you want to post type =regular/plaintext/absplit/rss/variate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMailChimpCampaignContent"
                        }
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/cancel-send": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/pause": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/replicate": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/resume": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/schedule": {
            "put": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The campaigns JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateMailChimpCampaignSchudule"
                        }
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/send": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/test": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/actions/unschedule": {
            "get": {
                "summary": "Update campaigns by its id",
                "description": "Update campaigns by its id",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "ID of campaigns to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MailChimpCampaign"
                ],
                "responses": {
                    "200": {
                        "description": "campaigns updated",
                        "schema": {
                            "$ref": "#/definitions/MailChimpCampaign"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requests_users": {
            "get": {
                "summary": "Fetch all requests users",
                "description": "Returns all requests users from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RequestsUser"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched requests users",
                        "schema": {
                            "$ref": "#/definitions/RequestsUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new requests user",
                "description": "Creates a new requests user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The requests user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRequestsUser"
                        }
                    }
                ],
                "tags": [
                    "RequestsUser"
                ],
                "responses": {
                    "200": {
                        "description": "New requests user added",
                        "schema": {
                            "$ref": "#/definitions/RequestsUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requests_users/{requestsUserId}": {
            "get": {
                "summary": "Fetch requests user",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "requestsUserId",
                        "in": "path",
                        "description": "ID of requests user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RequestsUser"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched requests user",
                        "schema": {
                            "$ref": "#/definitions/RequestsUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete requests user",
                "description": "Deletes a single requests user based on the ID supplied",
                "parameters": [
                    {
                        "name": "requestsUserId",
                        "in": "path",
                        "description": "ID of requests user to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "RequestsUser"
                ],
                "responses": {
                    "200": {
                        "description": "Requests User deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/requests/{requestId}/requests_users": {
            "get": {
                "summary": "Fetch requests user",
                "description": "Returns a requests user based on a single ID",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "description": "ID of requests id to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "RequestsUser"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched requests user",
                        "schema": {
                            "$ref": "#/definitions/RequestsUser"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/user_searches": {
            "get": {
                "summary": "Fetch all user searches",
                "description": "Returns all user searches from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user searches",
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_searches": {
            "get": {
                "summary": "Fetch all user searches",
                "description": "Returns all user searches from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user searches",
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user search",
                "description": "Creates a new user search",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user search JSON you want to post  / notification_type_id => 1. instantly ; 2. Never",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserSearch"
                        }
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "New user search added",
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_searches/{userSearchId}": {
            "get": {
                "summary": "Fetch user search",
                "description": "Returns a user search based on a single ID",
                "parameters": [
                    {
                        "name": "userSearchId",
                        "in": "path",
                        "description": "ID of user search to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user search",
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user search by its id",
                "description": "Update user search by its id",
                "parameters": [
                    {
                        "name": "userSearchId",
                        "in": "path",
                        "description": "ID of user search to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user search JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserSearch"
                        }
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "User Search updated",
                        "schema": {
                            "$ref": "#/definitions/UserSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user search",
                "description": "Deletes a single user search based on the ID supplied",
                "parameters": [
                    {
                        "name": "userSearchId",
                        "in": "path",
                        "description": "ID of user search to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserSearch"
                ],
                "responses": {
                    "200": {
                        "description": "User Search deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_search_notification_logs": {
            "get": {
                "summary": "Fetch all user search notification logs",
                "description": "Returns all user search notification logs from the system",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserSearchNotificationLog"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user search notification logs",
                        "schema": {
                            "$ref": "#/definitions/UserSearchNotificationLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user search notification log",
                "description": "Creates a new user search notification log",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user search notification log JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserSearchNotificationLog"
                        }
                    }
                ],
                "tags": [
                    "UserSearchNotificationLog"
                ],
                "responses": {
                    "200": {
                        "description": "New user search notification log added",
                        "schema": {
                            "$ref": "#/definitions/UserSearchNotificationLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_search_notification_logs/{userSearchNotificationLogId}": {
            "get": {
                "summary": "Fetch user search notification log",
                "description": "Returns a user search notification log based on a single ID",
                "parameters": [
                    {
                        "name": "userSearchNotificationLogId",
                        "in": "path",
                        "description": "ID of user search notification log to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserSearchNotificationLog"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user search notification log",
                        "schema": {
                            "$ref": "#/definitions/UserSearchNotificationLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user search notification log by its id",
                "description": "Update user search notification log by its id",
                "parameters": [
                    {
                        "name": "userSearchNotificationLogId",
                        "in": "path",
                        "description": "ID of user search notification log to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user search notification log JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserSearchNotificationLog"
                        }
                    }
                ],
                "tags": [
                    "UserSearchNotificationLog"
                ],
                "responses": {
                    "200": {
                        "description": "User Search Notification Log updated",
                        "schema": {
                            "$ref": "#/definitions/UserSearchNotificationLog"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user search notification log",
                "description": "Deletes a single user search notification log based on the ID supplied",
                "parameters": [
                    {
                        "name": "userSearchNotificationLogId",
                        "in": "path",
                        "description": "ID of user search notification log to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserSearchNotificationLog"
                ],
                "responses": {
                    "200": {
                        "description": "User Search Notification Log deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "city_id": {
                    "description": "City",
                    "type": "integer"
                },
                "confirm_password": {
                    "description": "Confirm Password",
                    "type": "string"
                },
                "dob": {
                    "description": "Certification Date (2016-01-01)",
                    "format": "date",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the User",
                    "type": "string"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "hobbies": {
                    "description": "Phone",
                    "type": "string"
                },
                "is_agree_terms_conditions": {
                    "description": "Accept Terms and Conditions",
                    "format": "int64",
                    "type": "integer"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone",
                    "type": "string"
                },
                "redirect_url": {
                    "description": "redirect_url",
                    "type": "string"
                },
                "referral_username": {
                    "description": "referral_username",
                    "type": "string"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string"
                },
                "password": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addSociallogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "oauth_verifier": {
                    "type": "string"
                },
                "oauth_token": {
                    "type": "string"
                },
                "redirectUri": {
                    "type": "string"
                }
            }
        },
        "forgotPasswordUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "changePasswordUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "AdminchangePasswordToUser": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "new_password": {
                    "type": "string",
                    "description": "New password"
                },
                "nnew_confirm_password": {
                    "type": "string",
                    "description": "New confirm password"
                }
            }
        },
        "addUser": {
            "properties": {
                "role_id": {
                    "description": "role_id",
                    "type": "integer",
                    "format": "int64"
                },
                "dob": {
                    "description": "Certification Date (2016-01-01)",
                    "format": "date",
                    "type": "string"
                },
                "email": {
                    "description": "Email of the User",
                    "type": "string"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "gender_id": {
                    "description": "gender_id",
                    "format": "int64",
                    "type": "integer"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "postal_code": {
                    "description": "postal_code",
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "secondary_phone_number": {
                    "type": "string"
                },
                "hobbies": {
                    "description": "Phone",
                    "type": "string"
                },
                "is_agree_terms_conditions": {
                    "description": "Accept Terms and Conditions",
                    "format": "int64",
                    "type": "integer"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "confirm_password": {
                    "description": "Confirm Password",
                    "type": "string"
                },
                "phone": {
                    "description": "Phone",
                    "type": "string"
                },
                "redirect_url": {
                    "description": "redirect_url",
                    "type": "string"
                },
                "referral_username": {
                    "description": "referral_username",
                    "type": "string"
                },
                "mobile_code": {
                    "description": "mobile_code",
                    "type": "string"
                },
                "secondary_mobile_code": {
                    "description": "secondary_mobile_code",
                    "type": "string"
                },
                "category_id": {
                    "description": "category_id",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "confirm_password",
                "dob",
                "email",
                "first_name",
                "hobbies",
                "is_agree_terms_conditions",
                "last_name",
                "password",
                "phone",
                "redirect_url"
            ]
        },
        "ProfileEdit": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "about_me": {
                    "description": "About Me (For Doc Only)",
                    "type": "string"
                },
                "dob": {
                    "type": "string",
                    "format": "date"
                },
                "awards": {
                    "description": "Awards (For Doc Only)",
                    "type": "string"
                },
                "address": {
                    "description": "Address",
                    "type": "string"
                },
                "address1": {
                    "description": "Address",
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "postal_code": {
                    "type": "integer",
                    "description": "Postal Code"
                },
                "latitude": {
                    "type": "integer",
                    "format": "float"
                },
                "longitude": {
                    "type": "integer",
                    "format": "float"
                },
                "listing_address": {
                    "type": "string"
                },
                "listing_address1": {
                    "type": "string"
                },
                "listing_city": {
                    "$ref": "#/definitions/editCity"
                },
                "listing_state": {
                    "$ref": "#/definitions/editState"
                },
                "listing_country": {
                    "$ref": "#/definitions/editCountry"
                },
                "listing_postal_code": {
                    "type": "integer",
                    "description": "Postal Code"
                },
                "listing_latitude": {
                    "type": "integer",
                    "format": "float"
                },
                "listing_longitude": {
                    "type": "integer",
                    "format": "float"
                },
                "ethnicity": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "facebook_handle": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "first_name": {
                    "description": "First Name",
                    "type": "string"
                },
                "gender_id": {
                    "description": "Gender",
                    "type": "integer"
                },
                "hospital_affiliation": {
                    "description": "hospital_affiliation",
                    "type": "string"
                },
                "identification_number": {
                    "description": "Identification Number",
                    "type": "string"
                },
                "is_allow_appointments": {
                    "description": "If User need to allow  appointments then value = 1 else value = 0",
                    "enum": [
                        0,
                        1
                    ],
                    "format": "int64",
                    "type": "integer"
                },
                "last_name": {
                    "description": "Last Name",
                    "type": "string"
                },
                "no_insurance_patients": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "notification_type_id": {
                    "description": "Notification Type (For Doc Only)",
                    "type": "integer"
                },
                "phone": {
                    "description": "Phone",
                    "type": "string"
                },
                "preferred_lang": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "race": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "twitter_handle": {
                    "description": "Insurance Patients",
                    "type": "string"
                },
                "user_id": {
                    "description": "The User identifier",
                    "format": "int64",
                    "type": "integer"
                },
                "listing_title": {
                    "type": "string"
                },
                "listing_description": {
                    "type": "string"
                },
                "image_data": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_address_proof_verification_pending": {
                    "type": "integer"
                },
                "is_listing_address_verified": {
                    "type": "integer"
                },
                "listing_status_id": {
                    "type": "integer"
                },
                "is_email_subscribed": {
                    "type": "integer"
                },
                "is_sms_notification": {
                    "type": "integer",
                    "format": "boolean"
                },
                "is_deleted": {
                    "type": "integer",
                    "format": "boolean"
                },
                "account_close_reason_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "account_close_reason": {
                    "type": "string"
                },
                "mobile_code": {
                    "description": "mobile_code",
                    "type": "string"
                },
                "secondary_mobile_code": {
                    "description": "secondary_mobile_code",
                    "type": "string"
                },
                "is_push_notification_enabled": {
                    "type": "boolean",
                    "format": "int32"
                },
                "phone_number": {
                    "type": "string"
                },
                "listing_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addDoctorImage"
                    }
                },
                "service_user": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addServiceUsers"
                    }
                },
                "form_field_submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldSubmission"
                    }
                },
                "is_register_as_service_provider": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_register_as_customer": {
                    "type": "integer",
                    "format": "int32"
                },
                "listing_address_verified_status_id": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "about_me",
                "address",
                "awards",
                "first_name",
                "gender_id",
                "last_name",
                "notification_type_id",
                "phone",
                "postal_code",
                "user_id"
            ]
        },
        "addFormFieldSubmission": {
            "type": "object",
            "required": [
                "field_id"
            ],
            "properties": {
                "field_id": {
                    "type": "integer"
                }
            }
        },
        "addDoctorImage": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "image_data": {
                    "type": "string"
                }
            }
        },
        "addProvider": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "addPage": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "page_content": {
                    "type": "string"
                },
                "language_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addMultiplePage": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addPage"
                    }
                }
            }
        },
        "Page": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "page_content": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SettingCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "plugin": {
                    "type": "string"
                }
            }
        },
        "addSetting": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "is_send_to_frontend": {
                    "type": "integer",
                    "format": "int64"
                },
                "allowed_countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllowedCountries"
                    }
                },
                "allowed_cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllowedCities"
                    }
                }
            }
        },
        "AllowedCountries": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AllowedCities": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "setting_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int32"
                },
                "option_values": {
                    "type": "string"
                },
                "is_send_to_frontend": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addEmailTemplate": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_content": {
                    "type": "string",
                    "format": "string"
                },
                "plugin": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "EmailTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "format": "string"
                },
                "display_name": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string",
                    "format": "string"
                },
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "email_variables": {
                    "type": "string",
                    "format": "string"
                },
                "html_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "plugin": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AppointmentModificationAdd": {
            "properties": {
                "user_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "unavailable_date": {
                    "description": "Date",
                    "format": "date",
                    "type": "string"
                },
                "unavailable_from_time": {
                    "description": "Practice open time",
                    "type": "string"
                },
                "unavailable_to_time": {
                    "description": "Practice close time",
                    "type": "string"
                },
                "day": {
                    "description": "AllDay, Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday",
                    "type": "string"
                },
                "type": {
                    "description": "Make a Day off",
                    "type": "integer"
                }
            },
            "required": [
                "unavailable_date",
                "user_id",
                "type",
                "unavailable_from_time"
            ]
        },
        "AppointmentModificationAddMultiple": {
            "properties": {
                "appointment_modifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppointmentModificationAdd"
                    }
                }
            }
        },
        "AppointmentModificationDeleteId": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "AppointmentModificationDeleteMultiple": {
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppointmentModificationDeleteId"
                    }
                }
            }
        },
        "AppointmentModificationEdit": {
            "properties": {
                "user_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "unavailable_date": {
                    "description": "Date",
                    "format": "date",
                    "type": "string"
                },
                "unavailable_from_time": {
                    "description": "Practice open time",
                    "type": "string"
                },
                "type": {
                    "description": "Make a Day off",
                    "type": "integer"
                },
                "is_active": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "unavailable_date",
                "user_id",
                "type",
                "unavailable_from_time",
                "is_active"
            ]
        },
        "AppointmentModifications": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "unavailable_date": {
                    "description": "Date",
                    "format": "date",
                    "type": "string"
                },
                "unavailable_from_time": {
                    "description": "Practice open time",
                    "type": "string"
                },
                "type": {
                    "description": "Make a Day off",
                    "type": "integer"
                },
                "is_active": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "ListingStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AppointmentStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "appointment_count": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAppointment": {
            "type": "object",
            "required": [
                "appointment_from_time"
            ],
            "properties": {
                "services_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_from_date": {
                    "type": "string",
                    "format": "date"
                },
                "appointment_from_time": {
                    "type": "string"
                },
                "customer_note": {
                    "type": "string"
                },
                "appointment_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_to_date": {
                    "type": "string",
                    "format": "date"
                },
                "appointment_to_time": {
                    "type": "string"
                },
                "work_location_address": {
                    "type": "string"
                },
                "work_location_address1": {
                    "type": "string"
                },
                "work_location_city": {
                    "$ref": "#/definitions/editCity"
                },
                "work_location_state": {
                    "$ref": "#/definitions/editState"
                },
                "work_location_country": {
                    "$ref": "#/definitions/editCountry"
                },
                "work_location_postal_code": {
                    "type": "string"
                },
                "form_field_submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldSubmission"
                    }
                },
                "number_of_item": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "updateAppointment": {
            "type": "object",
            "required": [
                "appointment_from_time"
            ],
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "provider_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_from_date": {
                    "type": "string",
                    "format": "date"
                },
                "appointment_from_time": {
                    "type": "string"
                },
                "customer_note": {
                    "type": "string"
                },
                "provider_note": {
                    "type": "string"
                },
                "specialty_disease_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ical_link_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_ical_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "total_booking_amount": {
                    "type": "string"
                },
                "appointment_to_date": {
                    "type": "string",
                    "format": "date"
                },
                "no_of_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "site_commission_from_freelancer": {
                    "type": "string"
                },
                "paid_escrow_amount_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_affiliate_amount": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "paypal_status": {
                    "type": "string"
                },
                "authorization_id": {
                    "type": "string"
                },
                "capture_id": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "work_location_address": {
                    "type": "string"
                },
                "work_location_address1": {
                    "type": "string"
                },
                "work_location_city": {
                    "$ref": "#/definitions/editCity"
                },
                "work_location_state": {
                    "$ref": "#/definitions/editState"
                },
                "work_location_country": {
                    "$ref": "#/definitions/editCountry"
                },
                "work_location_postal_code": {
                    "type": "string"
                },
                "number_of_item": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAppointmentChangeStatus": {
            "type": "object",
            "required": [
                "appointment_status_id"
            ],
            "properties": {
                "appointment_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_booking_amount": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAppointmentChangeServiceProvider": {
            "type": "object",
            "required": [
                "new_service_provider"
            ],
            "properties": {
                "new_service_provider": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Appointment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "provider_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_from_date": {
                    "type": "string",
                    "format": "date"
                },
                "appointment_from_time": {
                    "type": "string"
                },
                "customer_note": {
                    "type": "string"
                },
                "provider_note": {
                    "type": "string"
                },
                "specialty_disease_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ical_link_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_ical_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "total_booking_amount": {
                    "type": "string"
                },
                "appointment_to_date": {
                    "type": "string",
                    "format": "date"
                },
                "no_of_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "site_commission_from_freelancer": {
                    "type": "string"
                },
                "paid_escrow_amount_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "used_affiliate_amount": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "paypal_status": {
                    "type": "string"
                },
                "authorization_id": {
                    "type": "string"
                },
                "capture_id": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "service_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "cancellation_policy_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "number_of_item": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FavoriteAdd": {
            "properties": {
                "username": {
                    "description": "Doctor Username",
                    "type": "string"
                },
                "user_id": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "required": [
                "username",
                "user_id"
            ]
        },
        "UserFavorite": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "format": "int64",
                    "type": "integer"
                },
                "provider_user_id": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "addState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCountry": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "iso_alpha2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "iso_alpha2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                }
            }
        },
        "addLanguage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Language": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addContact": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "telephone": {
                    "type": "integer",
                    "format": "int64"
                },
                "image_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addAttachment"
                    }
                },
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addAttachment"
                    }
                },
                "is_contact_for_address_verification": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "telephone": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addTranslation": {
            "type": "object",
            "properties": {
                "lang_code": {
                    "type": "string"
                }
            }
        },
        "editTranslation": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addNewKey"
                    }
                }
            }
        },
        "addNewKey": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "lang_text": {
                    "type": "string"
                }
            }
        },
        "Translation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "updateTranslation": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "UserLogin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "UserView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addPaymentGateway": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "string"
                },
                "is_test_mode": {
                    "type": "string"
                },
                "is_active": {
                    "type": "string"
                },
                "is_enable_for_wallet": {
                    "type": "string"
                }
            }
        },
        "PaymentGateway": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "string"
                },
                "transaction_count": {
                    "type": "string"
                },
                "payment_gateway_setting_count": {
                    "type": "string"
                },
                "is_test_mode": {
                    "type": "string"
                },
                "is_active": {
                    "type": "string"
                },
                "is_enable_for_wallet": {
                    "type": "string"
                }
            }
        },
        "addPaymentGatewaySetting": {
            "type": "object",
            "required": [
                "payment_gateway_id",
                "name",
                "label",
                "description",
                "options"
            ],
            "properties": {
                "payment_gateway_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "test_mode_value": {
                    "type": "string"
                },
                "live_mode_value": {
                    "type": "string"
                }
            }
        },
        "PaymentGatewaySetting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "payment_gateway_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                },
                "test_mode_value": {
                    "type": "string"
                },
                "live_mode_value": {
                    "type": "string"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "transaction_type": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addMoneyTransferAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MoneyTransferAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "account": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addUserCashWithdrawal": {
            "type": "object",
            "properties": {
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "UserCashWithdrawal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "withdrawal_status_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "addMessage": {
            "type": "object",
            "properties": {
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/addAttachment"
                },
                "is_private": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message_content_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_sender": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_read": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_private": {
                    "type": "integer",
                    "format": "int32"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "root": {
                    "type": "string"
                },
                "freshness_ts": {
                    "type": "string"
                },
                "depth": {
                    "type": "integer",
                    "format": "int64"
                },
                "materialized_path": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "is_child_replied": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAttachment": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "string"
                }
            }
        },
        "addService": {
            "type": "object",
            "required": [
                "is_need_user_location",
                "is_enable_multiple_booking"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "booking_option_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_need_user_location": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_allow_to_get_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "label_for_number_of_item": {
                    "type": "string"
                },
                "maximum_number_to_allow": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_multiply_booking_amount_when_choosing_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "icon_class": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldGroups"
                    }
                }
            }
        },
        "updateService": {
            "type": "object",
            "required": [
                "is_need_user_location",
                "is_enable_multiple_booking"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "booking_option_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_need_user_location": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_allow_to_get_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "label_for_number_of_item": {
                    "type": "string"
                },
                "maximum_number_to_allow": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_multiply_booking_amount_when_choosing_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "icon_class": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/editFormFieldGroups"
                    }
                }
            }
        },
        "editFormFieldGroups": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "form_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/editFormFields"
                    }
                },
                "is_belongs_to_service_provider": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addFormFieldGroups": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "form_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFields"
                    }
                },
                "is_belongs_to_service_provider": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addFormFields": {
            "type": "object",
            "required": [
                "is_required",
                "is_active",
                "display_order"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "input_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "info": {
                    "type": "string"
                },
                "is_required": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "depends_on": {
                    "type": "string",
                    "format": "string"
                },
                "depends_value": {
                    "type": "string",
                    "format": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                },
                "options": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "editFormFields": {
            "type": "object",
            "required": [
                "is_required",
                "is_active",
                "display_order"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "input_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "info": {
                    "type": "string"
                },
                "is_required": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "depends_on": {
                    "type": "string",
                    "format": "string"
                },
                "depends_value": {
                    "type": "string",
                    "format": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                },
                "options": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "booking_option_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_need_user_location": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_allow_to_get_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "label_for_number_of_item": {
                    "type": "string"
                },
                "maximum_number_to_allow": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_multiply_booking_amount_when_choosing_number_of_items": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_common_hourly_rate_for_all_sub_services": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string"
                },
                "icon_class": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldGroups"
                    }
                }
            }
        },
        "updateCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_common_hourly_rate_for_all_sub_services": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string"
                },
                "icon_class": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/editFormFieldGroups"
                    }
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_multiple_booking": {
                    "type": "integer",
                    "format": "int32"
                },
                "service_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "icon_class": {
                    "type": "string"
                },
                "is_featured": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addFormField": {
            "type": "object",
            "required": [
                "length",
                "is_required",
                "is_active",
                "display_order"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "input_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "label": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "length": {
                    "type": "integer",
                    "format": "int64"
                },
                "options": {
                    "type": "string"
                },
                "is_required": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FormFieldSubmission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "form_field_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "is_custom_form_field": {
                    "type": "boolean"
                }
            }
        },
        "FormField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "length": {
                    "type": "integer",
                    "format": "int64"
                },
                "options": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                },
                "input_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_group_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_required": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                },
                "depends_on": {
                    "type": "string"
                },
                "depends_value": {
                    "type": "string"
                }
            }
        },
        "addFormFieldGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "info": {
                    "type": "string"
                },
                "class": {
                    "type": "string"
                }
            }
        },
        "FormFieldGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "info": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "is_deletable": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_editable": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InputType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "UpdateAppointmentSetting": {
            "properties": {
                "is_today_first_day": {
                    "type": "integer",
                    "format": "int32"
                },
                "calendar_slot_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "practice_open": {
                    "type": "string"
                },
                "practice_close": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_sunday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "sunday_practice_open": {
                    "type": "string"
                },
                "sunday_practice_close": {
                    "type": "string"
                },
                "is_monday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "monday_practice_open": {
                    "type": "string"
                },
                "monday_practice_close": {
                    "type": "string"
                },
                "is_tuesday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesday_practice_open": {
                    "type": "string"
                },
                "tuesday_practice_close": {
                    "type": "string"
                },
                "is_wednesday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "wednesday_practice_open": {
                    "type": "string"
                },
                "wednesday_practice_close": {
                    "type": "string"
                },
                "is_thursday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "thursday_practice_open": {
                    "type": "string"
                },
                "thursday_practice_close": {
                    "type": "string"
                },
                "is_friday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_practice_open": {
                    "type": "string"
                },
                "friday_practice_close": {
                    "type": "string"
                },
                "is_saturday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "saturday_practice_open": {
                    "type": "string"
                },
                "saturday_practice_close": {
                    "type": "string"
                },
                "appointment_modifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AddAppointmentModifications"
                    }
                }
            }
        },
        "AddAppointmentModifications": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer",
                    "format": "int64"
                },
                "day": {
                    "type": "string"
                },
                "unavailable_from_time": {
                    "type": "string"
                },
                "unavailable_to_time": {
                    "type": "string"
                }
            }
        },
        "AppointmentSetting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_today_first_day": {
                    "type": "integer",
                    "format": "int32"
                },
                "calendar_slot_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "practice_open": {
                    "type": "string"
                },
                "lunch_at": {
                    "type": "string"
                },
                "resume_at": {
                    "type": "string"
                },
                "practice_close": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_sunday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "sunday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "sunday_practice_open": {
                    "type": "string"
                },
                "sunday_lunch_at": {
                    "type": "string"
                },
                "sunday_resume_at": {
                    "type": "string"
                },
                "sunday_practice_close": {
                    "type": "string"
                },
                "is_monday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "monday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "monday_practice_open": {
                    "type": "string"
                },
                "monday_lunch_at": {
                    "type": "string"
                },
                "monday_resume_at": {
                    "type": "string"
                },
                "monday_practice_close": {
                    "type": "string"
                },
                "is_tuesday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesday_practice_open": {
                    "type": "string"
                },
                "tuesday_lunch_at": {
                    "type": "string"
                },
                "tuesday_resume_at": {
                    "type": "string"
                },
                "tuesday_practice_close": {
                    "type": "string"
                },
                "is_wednesday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "wednesday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "wednesday_practice_open": {
                    "type": "string"
                },
                "wednesday_lunch_at": {
                    "type": "string"
                },
                "wednesday_resume_at": {
                    "type": "string"
                },
                "wednesday_practice_close": {
                    "type": "string"
                },
                "is_thursday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "thrusday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "thursday_practice_open": {
                    "type": "string"
                },
                "thrusday_lunch_at": {
                    "type": "string"
                },
                "thrusday_resume_at": {
                    "type": "string"
                },
                "thursday_practice_close": {
                    "type": "string"
                },
                "is_friday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_practice_open": {
                    "type": "string"
                },
                "friday_lunch_at": {
                    "type": "string"
                },
                "friday_resume_at": {
                    "type": "string"
                },
                "friday_practice_close": {
                    "type": "string"
                },
                "is_saturday_open": {
                    "type": "integer",
                    "format": "int32"
                },
                "saturday_two_session": {
                    "type": "integer",
                    "format": "int32"
                },
                "saturday_practice_open": {
                    "type": "string"
                },
                "saturday_lunch_at": {
                    "type": "string"
                },
                "saturday_resume_at": {
                    "type": "string"
                },
                "saturday_practice_close": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_suspend": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "Gender": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "WithdrawalStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "editCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "editState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "editCountry": {
            "type": "object",
            "properties": {
                "iso2": {
                    "type": "string"
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zip_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addPayment": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zip_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "cvv2": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "string"
                },
                "expire_year": {
                    "type": "string"
                },
                "vault_id": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                }
            }
        },
        "ServiceUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "service_id": {
                    "description": "Service Id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "User Id",
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "description": "Flat Rate",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "addServiceUsers": {
            "type": "object",
            "properties": {
                "service_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "integer",
                    "format": "int32"
                },
                "cancellation_policy_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "updateUser": {
            "type": "object",
            "properties": {
                "role_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_email_confirmed": {
                    "type": "integer",
                    "format": "int32"
                },
                "remember_token": {
                    "type": "string"
                },
                "overall_avg_rating": {
                    "type": "integer",
                    "format": "int64"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "listing_city": {
                    "$ref": "#/definitions/editCity"
                },
                "listing_state": {
                    "$ref": "#/definitions/editState"
                },
                "listing_country": {
                    "$ref": "#/definitions/editCountry"
                },
                "flat_rate": {
                    "type": "string"
                },
                "is_address_proof_verification_pending": {
                    "type": "integer",
                    "format": "int32"
                },
                "referred_by_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "affiliate_pending_amount": {
                    "type": "string"
                },
                "affiliate_paid_amount": {
                    "type": "string"
                },
                "paypal_email": {
                    "type": "string"
                },
                "is_email_enabled_when_someone_add_me_as_wishlisted": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_push_notification_enabled_when_someone_add_me_as_wishlisted": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_email_subscribed": {
                    "type": "integer",
                    "format": "int32"
                },
                "mobile_code": {
                    "description": "mobile_code",
                    "type": "string"
                },
                "secondary_mobile_code": {
                    "description": "secondary_mobile_code",
                    "type": "string"
                },
                "is_push_notification_enabled": {
                    "type": "boolean"
                },
                "display_order": {
                    "type": "string"
                }
            }
        },
        "Review": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "to_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "is_freelancer": {
                    "type": "integer"
                },
                "model_class": {
                    "type": "string"
                }
            }
        },
        "addReview": {
            "type": "object",
            "required": [
                "foreign_id",
                "class",
                "rating"
            ],
            "properties": {
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "addQuoteBidReview": {
            "type": "object",
            "required": [
                "rating"
            ],
            "properties": {
                "rating": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "addCancellationPolicy": {
            "type": "object",
            "required": [
                "name",
                "description",
                "days_before",
                "days_before_refund_percentage",
                "days_after",
                "days_after_refund_percentage"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "days_before": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_before_refund_percentage": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_after": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_after_refund_percentage": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "CancellationPolicy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "days_before": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_before_refund_percentage": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_after": {
                    "type": "integer",
                    "format": "int64"
                },
                "days_after_refund_percentage": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAccountCloseReason": {
            "type": "object",
            "required": [
                "reasons",
                "display_order"
            ],
            "properties": {
                "reasons": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AccountCloseReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "reasons": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addFaq": {
            "type": "object",
            "required": [
                "faq_question",
                "faq_answer"
            ],
            "properties": {
                "faq_question": {
                    "type": "string"
                },
                "faq_answer": {
                    "type": "string"
                }
            }
        },
        "Faq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "faq_question": {
                    "type": "string"
                },
                "faq_answer": {
                    "type": "string"
                }
            }
        },
        "addQuiz": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Quiz": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addQuizQuestion": {
            "type": "object",
            "required": [
                "question"
            ],
            "properties": {
                "quiz_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "question": {
                    "type": "string"
                },
                "answer_options": {
                    "type": "string"
                },
                "current_answer": {
                    "type": "string"
                }
            }
        },
        "QuizQuestion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "quiz_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "addQuizQuestionAnswerOption": {
            "type": "object",
            "required": [
                "quiz_id",
                "quiz_question_id"
            ],
            "properties": {
                "quiz_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "quiz_question_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "option": {
                    "type": "string"
                },
                "is_correct_answer": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "QuizQuestionAnswerOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "quiz_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "quiz_question_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "option": {
                    "type": "string"
                },
                "is_correct_answer": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InviteFriends": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addInviteFriends"
                    }
                }
            }
        },
        "addInviteFriends": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "addApnsDevice": {
            "type": "object",
            "properties": {
                "appname": {
                    "type": "string"
                },
                "appversion": {
                    "type": "string"
                },
                "deviceuid": {
                    "type": "string"
                },
                "devicetoken": {
                    "type": "string"
                },
                "devicename": {
                    "type": "string"
                },
                "devicemodel": {
                    "type": "string"
                },
                "devicetype": {
                    "type": "integer",
                    "format": "int32"
                },
                "deviceversion": {
                    "type": "string"
                },
                "pushbadge": {
                    "type": "string"
                },
                "pushalert": {
                    "type": "string"
                },
                "pushsound": {
                    "type": "string"
                },
                "development": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "ApnsDevice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appname": {
                    "type": "string"
                },
                "appversion": {
                    "type": "string"
                },
                "deviceuid": {
                    "type": "string"
                },
                "devicetoken": {
                    "type": "string"
                },
                "devicename": {
                    "type": "string"
                },
                "devicemodel": {
                    "type": "string"
                },
                "devicetype": {
                    "type": "string"
                },
                "deviceversion": {
                    "type": "string"
                },
                "pushbadge": {
                    "type": "string"
                },
                "pushalert": {
                    "type": "string"
                },
                "pushsound": {
                    "type": "string"
                },
                "development": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Latitude."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Longitude."
                }
            }
        },
        "verifyOtp": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "integer"
                }
            }
        },
        "Plugin": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "updatePlugin": {
            "type": "object",
            "properties": {
                "is_enabled": {
                    "type": "integer",
                    "format": "int64"
                },
                "plugin": {
                    "type": "string"
                }
            }
        },
        "addVault": {
            "type": "object",
            "properties": {
                "credit_card_number": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "string"
                },
                "expire_year": {
                    "type": "string"
                },
                "cvv2": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "integer"
                }
            }
        },
        "updateVault": {
            "type": "object",
            "properties": {
                "is_primary": {
                    "type": "integer"
                }
            }
        },
        "UserCreditCard": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "string"
                },
                "expire_year": {
                    "type": "string"
                },
                "cvv2": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "integer"
                }
            }
        },
        "TopListingPaymentLog": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "paid_top_listing_amount": {
                    "type": "string"
                },
                "top_listing_paid_on": {
                    "type": "string",
                    "format": "date-time"
                },
                "expiry_on": {
                    "type": "string",
                    "format": "date-time"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "request_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "job_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_timing_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "appointment_from_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "appointment_from_time": {
                    "type": "string"
                },
                "appointment_to_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "appointment_to_time": {
                    "type": "string"
                },
                "price_per_hour": {
                    "type": "string"
                },
                "work_location_address": {
                    "type": "string"
                },
                "work_location_address1": {
                    "type": "string"
                },
                "sunday_appointment_from_time": {
                    "type": "string"
                },
                "work_location_city": {
                    "$ref": "#/definitions/editCity"
                },
                "work_location_state": {
                    "$ref": "#/definitions/editState"
                },
                "work_location_country": {
                    "$ref": "#/definitions/editCountry"
                },
                "payment_mode_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "work_location_postal_code": {
                    "type": "string"
                },
                "sunday_appointment_to_time": {
                    "type": "string"
                },
                "number_of_item": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_monday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesday_appointment_to_time": {
                    "type": "string"
                },
                "monday_appointment_from_time": {
                    "type": "string"
                },
                "monday_appointment_to_time": {
                    "type": "string"
                },
                "tuesday_appointment_from_time": {
                    "type": "string"
                },
                "is_tuesday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_appointment_from_time": {
                    "type": "string"
                },
                "wednesday_appointment_from_time": {
                    "type": "string"
                },
                "wednesday_appointment_to_time": {
                    "type": "string"
                },
                "is_thursday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "thursday_appointment_from_time": {
                    "type": "string"
                },
                "thursday_appointment_to_time": {
                    "type": "string"
                },
                "is_friday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_wednesday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "requests_user_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_saturday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_appointment_to_time": {
                    "type": "string"
                },
                "saturday_appointment_from_time": {
                    "type": "string"
                },
                "saturday_appointment_to_time": {
                    "type": "string"
                },
                "is_sunday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "form_field_submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldSubmission"
                    }
                },
                "work_location_latitude": {
                    "type": "string"
                },
                "work_location_longitude": {
                    "type": "string"
                }
            }
        },
        "Request": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "request_status_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "job_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "appointment_timing_type_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "appointment_from_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "appointment_from_time": {
                    "type": "string"
                },
                "appointment_to_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "appointment_to_time": {
                    "type": "string"
                },
                "price_per_hour": {
                    "type": "string"
                },
                "work_location_address": {
                    "type": "string"
                },
                "work_location_address1": {
                    "type": "string"
                },
                "work_location_state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "sunday_appointment_from_time": {
                    "type": "string"
                },
                "work_location_city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "work_location_country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "payment_mode_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "work_location_postal_code": {
                    "type": "string"
                },
                "sunday_appointment_to_time": {
                    "type": "string"
                },
                "number_of_item": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_monday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "tuesday_appointment_to_time": {
                    "type": "string"
                },
                "monday_appointment_from_time": {
                    "type": "string"
                },
                "monday_appointment_to_time": {
                    "type": "string"
                },
                "tuesday_appointment_from_time": {
                    "type": "string"
                },
                "is_tuesday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_appointment_from_time": {
                    "type": "string"
                },
                "wednesday_appointment_from_time": {
                    "type": "string"
                },
                "wednesday_appointment_to_time": {
                    "type": "string"
                },
                "is_thursday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "thursday_appointment_from_time": {
                    "type": "string"
                },
                "thursday_appointment_to_time": {
                    "type": "string"
                },
                "is_friday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_wednesday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "requests_user_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_saturday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "friday_appointment_to_time": {
                    "type": "string"
                },
                "saturday_appointment_from_time": {
                    "type": "string"
                },
                "saturday_appointment_to_time": {
                    "type": "string"
                },
                "is_sunday_needed": {
                    "type": "integer",
                    "format": "int32"
                },
                "work_location_latitude": {
                    "type": "string"
                },
                "work_location_longitude": {
                    "type": "string"
                }
            }
        },
        "addRequestsUser": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "RequestsUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "request_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addUserSearch": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "sw_latitude": {
                    "type": "string"
                },
                "sw_longitude": {
                    "type": "string"
                },
                "ne_latitude": {
                    "type": "string"
                },
                "ne_longitude": {
                    "type": "string"
                },
                "radius": {
                    "type": "string"
                },
                "form_field_submissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormFieldSubmission"
                    }
                },
                "filter_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "notification_type_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserSearch": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "sw_latitude": {
                    "type": "string"
                },
                "sw_longitude": {
                    "type": "string"
                },
                "ne_latitude": {
                    "type": "string"
                },
                "ne_longitude": {
                    "type": "string"
                },
                "radius": {
                    "type": "string"
                },
                "form_field_submissions": {
                    "type": "string"
                },
                "filter_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "notification_type_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addUserSearchNotificationLog": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_provider_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_search_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UserSearchNotificationLog": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "service_provider_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "user_search_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "MailChimpList": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addMailChimpList": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "contact": {
                    "$ref": "#/definitions/addMailChimpListContact"
                },
                "permission_reminder": {
                    "type": "string"
                },
                "campaign_defaults": {
                    "$ref": "#/definitions/addMailChimpListCampaign"
                },
                "email_type_option": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addMailChimpListContact": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "addMailChimpListCampaign": {
            "type": "object",
            "properties": {
                "from_name": {
                    "type": "string"
                },
                "from_email": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                }
            }
        },
        "MailChimpCampaign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addMailChimpCampaign": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "recipients": {
                    "$ref": "#/definitions/addMailChimpRecipients"
                },
                "settings": {
                    "$ref": "#/definitions/addMailChimpSettings"
                }
            }
        },
        "addMailChimpRecipients": {
            "type": "object",
            "properties": {
                "list_id": {
                    "type": "string"
                }
            }
        },
        "addMailChimpSettings": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "subject_line": {
                    "type": "string"
                },
                "reply_to": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                }
            }
        },
        "addMember": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "merge_fields": {
                    "$ref": "#/definitions/addMailChimpName"
                }
            }
        },
        "addMailChimpName": {
            "type": "object",
            "properties": {
                "FNAME": {
                    "type": "string"
                },
                "LNAME": {
                    "type": "string"
                }
            }
        },
        "updateMailChimpCampaignContent": {
            "type": "object",
            "properties": {
                "html": {
                    "type": "string"
                }
            }
        },
        "updateMailChimpCampaignSchudule": {
            "type": "object",
            "properties": {
                "schedule_time": {
                    "type": "string"
                },
                "timewarp": {
                    "type": "string"
                },
                "batch_delay": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}